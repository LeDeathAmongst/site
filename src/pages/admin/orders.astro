---
import Layout from "../layouts/Layout.astro";
import OrderCard from "../components/OrderCard.astro";
import { createSignal, onMount } from "solid-js";

// Fetch orders (replace this with your actual orders fetching logic)
const orders = await getCollection("orders");

// Create signals for PIN, search, and authentication status
const [pin, setPin] = createSignal("");
const [isAuthenticated, setIsAuthenticated] = createSignal(false);
const [searchQuery, setSearchQuery] = createSignal("");
const [filteredOrders, setFilteredOrders] = createSignal(orders);

// Check authentication status on mount
onMount(() => {
  const storedAuth = localStorage.getItem("isAuthenticated");
  if (storedAuth === "true") {
    setIsAuthenticated(true);
  }
});

// Handle PIN submission
const handlePinSubmit = (event) => {
  event.preventDefault();
  if (pin() === "1104") {
    setIsAuthenticated(true);
    localStorage.setItem("isAuthenticated", "true");
  } else {
    alert("Incorrect PIN");
  }
};

// Handle search input
const handleSearch = (event) => {
  setSearchQuery(event.target.value);
  const query = event.target.value.toLowerCase();
  setFilteredOrders(orders.filter(order => order.id.toLowerCase().includes(query)));
};
---

<Layout
  title="Admin Orders - Rosie"
  ogTitle="Admin Orders"
  description="View submitted orders."
>
  <h1>Admin Orders</h1>

  {isAuthenticated() ? (
    <div>
      <input type="text" placeholder="Search by UUID" value={searchQuery()} onInput={handleSearch} class="search-bar" />
      {filteredOrders().length > 0 ? (
        filteredOrders().map(order => (
          <OrderCard order={order} />
        ))
      ) : (
        <p>No orders found.</p>
      )}
    </div>
  ) : (
    <form onSubmit={handlePinSubmit} class="pin-form">
      <label for="pin">Enter PIN:</label>
      <input type="password" id="pin" value={pin()} onInput={(e) => setPin(e.target.value)} required />
      <button type="submit">Submit</button>
    </form>
  )}
</Layout>

<style>
  .pin-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 1rem;
  }

  .pin-form label {
    font-weight: bold;
  }

  .pin-form input {
    width: 100%;
    padding: 0.5rem;
    font-size: 1rem;
    background-color: black; /* Black background */
    color: white; /* White text */
    border: 1px solid white; /* White border */
  }

  .pin-form button {
    width: fit-content;
    padding: 0.5rem 1rem;
    background-color: #007bff;
    color: white;
    border: none;
    cursor: pointer;
  }

  .pin-form button:hover {
    background-color: #0056b3;
  }

  .search-bar {
    width: 100%;
    padding: 0.5rem;
    font-size: 1rem;
    margin-bottom: 1rem;
    background-color: black; /* Black background */
    color: white; /* White text */
    border: 1px solid white; /* White border */
  }
</style>
